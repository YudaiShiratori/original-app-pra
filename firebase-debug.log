[debug] [2019-03-31T08:09:33.590Z] ----------------------------------------------------------------------
[debug] [2019-03-31T08:09:33.593Z] Command:       /usr/bin/node /mnt/c/Users/torit/AppData/Roaming/npm/node_modules/firebase-tools/lib/bin/firebase.js init firestore
[debug] [2019-03-31T08:09:33.594Z] CLI Version:   6.4.0
[debug] [2019-03-31T08:09:33.594Z] Platform:      linux
[debug] [2019-03-31T08:09:33.594Z] Node Version:  v8.10.0
[debug] [2019-03-31T08:09:33.594Z] Time:          Sun Mar 31 2019 17:09:33 GMT+0900 (DST)
[debug] [2019-03-31T08:09:33.594Z] ----------------------------------------------------------------------
[debug] 
[debug] [2019-03-31T08:09:33.616Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-03-31T08:09:33.617Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /mnt/c/Users/torit/workspace/vue/original-app/original-app-pra

Before we get started, keep in mind:

  * You are currently outside your home directory
  * You are initializing in an existing Firebase project directory

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[info] i  .firebaserc already has a default project, skipping
[info] 
=== Firestore Setup
[debug] [2019-03-31T08:09:33.639Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-03-31T08:09:33.640Z] > authorizing via signed-in user
[debug] [2019-03-31T08:09:33.643Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2019-03-31T08:09:33.643Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2019-03-31T08:09:34.086Z] <<< HTTP RESPONSE 200
[debug] [2019-03-31T08:09:34.101Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/original-app-b9263  
 
[debug] [2019-03-31T08:09:34.736Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
